// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using joia_web_dotnet_infra;

#nullable disable

namespace joia_web_dotnet_infra.Migrations
{
    [DbContext(typeof(joiaDbContext))]
    [Migration("20230329231133_teste7")]
    partial class teste7
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NotificacaoPessoa", b =>
                {
                    b.Property<int>("NotificacoesId")
                        .HasColumnType("int");

                    b.Property<int>("PessoasId")
                        .HasColumnType("int");

                    b.HasKey("NotificacoesId", "PessoasId");

                    b.HasIndex("PessoasId");

                    b.ToTable("NotificacaoPessoa");
                });

            modelBuilder.Entity("joia_web_dotnet_domain.Entities.Metal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Pedra")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("PrecoPorGrama")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Metais");
                });

            modelBuilder.Entity("joia_web_dotnet_domain.Entities.Notificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Notificacoes");
                });

            modelBuilder.Entity("joia_web_dotnet_domain.Entities.Peca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MetalId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte>("Publico")
                        .HasColumnType("tinyint");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<byte>("Tipo")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("MetalId");

                    b.ToTable("Pecas");
                });

            modelBuilder.Entity("joia_web_dotnet_domain.Entities.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("joia_web_dotnet_domain.Entities.Administrador", b =>
                {
                    b.HasBaseType("joia_web_dotnet_domain.Entities.Pessoa");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("joia_web_dotnet_domain.Entities.Cliente", b =>
                {
                    b.HasBaseType("joia_web_dotnet_domain.Entities.Pessoa");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("NotificacaoPessoa", b =>
                {
                    b.HasOne("joia_web_dotnet_domain.Entities.Notificacao", null)
                        .WithMany()
                        .HasForeignKey("NotificacoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("joia_web_dotnet_domain.Entities.Pessoa", null)
                        .WithMany()
                        .HasForeignKey("PessoasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("joia_web_dotnet_domain.Entities.Peca", b =>
                {
                    b.HasOne("joia_web_dotnet_domain.Entities.Metal", "Metal")
                        .WithMany("Pecas")
                        .HasForeignKey("MetalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Metal");
                });

            modelBuilder.Entity("joia_web_dotnet_domain.Entities.Administrador", b =>
                {
                    b.HasOne("joia_web_dotnet_domain.Entities.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("joia_web_dotnet_domain.Entities.Administrador", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("joia_web_dotnet_domain.Entities.Cliente", b =>
                {
                    b.HasOne("joia_web_dotnet_domain.Entities.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("joia_web_dotnet_domain.Entities.Cliente", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("joia_web_dotnet_domain.Entities.Metal", b =>
                {
                    b.Navigation("Pecas");
                });
#pragma warning restore 612, 618
        }
    }
}
